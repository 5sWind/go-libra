// Code generated by "stringer -type=VMStatusCode ./types/"; DO NOT EDIT.

package types

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[UNKNOWN_VALIDATION_STATUS-0]
	_ = x[INVALID_SIGNATURE-1]
	_ = x[INVALID_AUTH_KEY-2]
	_ = x[SEQUENCE_NUMBER_TOO_OLD-3]
	_ = x[SEQUENCE_NUMBER_TOO_NEW-4]
	_ = x[INSUFFICIENT_BALANCE_FOR_TRANSACTION_FEE-5]
	_ = x[TRANSACTION_EXPIRED-6]
	_ = x[SENDING_ACCOUNT_DOES_NOT_EXIST-7]
	_ = x[REJECTED_WRITE_SET-8]
	_ = x[INVALID_WRITE_SET-9]
	_ = x[EXCEEDED_MAX_TRANSACTION_SIZE-10]
	_ = x[UNKNOWN_SCRIPT-11]
	_ = x[UNKNOWN_MODULE-12]
	_ = x[MAX_GAS_UNITS_EXCEEDS_MAX_GAS_UNITS_BOUND-13]
	_ = x[MAX_GAS_UNITS_BELOW_MIN_TRANSACTION_GAS_UNITS-14]
	_ = x[GAS_UNIT_PRICE_BELOW_MIN_BOUND-15]
	_ = x[GAS_UNIT_PRICE_ABOVE_MAX_BOUND-16]
	_ = x[UNKNOWN_VERIFICATION_ERROR-1000]
	_ = x[INDEX_OUT_OF_BOUNDS-1001]
	_ = x[RANGE_OUT_OF_BOUNDS-1002]
	_ = x[INVALID_SIGNATURE_TOKEN-1003]
	_ = x[INVALID_FIELD_DEF_REFERENCE-1004]
	_ = x[RECURSIVE_STRUCT_DEFINITION-1005]
	_ = x[INVALID_RESOURCE_FIELD-1006]
	_ = x[INVALID_FALL_THROUGH-1007]
	_ = x[JOIN_FAILURE-1008]
	_ = x[NEGATIVE_STACK_SIZE_WITHIN_BLOCK-1009]
	_ = x[UNBALANCED_STACK-1010]
	_ = x[INVALID_MAIN_FUNCTION_SIGNATURE-1011]
	_ = x[DUPLICATE_ELEMENT-1012]
	_ = x[INVALID_MODULE_HANDLE-1013]
	_ = x[UNIMPLEMENTED_HANDLE-1014]
	_ = x[INCONSISTENT_FIELDS-1015]
	_ = x[UNUSED_FIELDS-1016]
	_ = x[LOOKUP_FAILED-1017]
	_ = x[VISIBILITY_MISMATCH-1018]
	_ = x[TYPE_RESOLUTION_FAILURE-1019]
	_ = x[TYPE_MISMATCH-1020]
	_ = x[MISSING_DEPENDENCY-1021]
	_ = x[POP_REFERENCE_ERROR-1022]
	_ = x[POP_RESOURCE_ERROR-1023]
	_ = x[RELEASEREF_TYPE_MISMATCH_ERROR-1024]
	_ = x[BR_TYPE_MISMATCH_ERROR-1025]
	_ = x[ABORT_TYPE_MISMATCH_ERROR-1026]
	_ = x[STLOC_TYPE_MISMATCH_ERROR-1027]
	_ = x[STLOC_UNSAFE_TO_DESTROY_ERROR-1028]
	_ = x[RET_UNSAFE_TO_DESTROY_ERROR-1029]
	_ = x[RET_TYPE_MISMATCH_ERROR-1030]
	_ = x[FREEZEREF_TYPE_MISMATCH_ERROR-1031]
	_ = x[FREEZEREF_EXISTS_MUTABLE_BORROW_ERROR-1032]
	_ = x[BORROWFIELD_TYPE_MISMATCH_ERROR-1033]
	_ = x[BORROWFIELD_BAD_FIELD_ERROR-1034]
	_ = x[BORROWFIELD_EXISTS_MUTABLE_BORROW_ERROR-1035]
	_ = x[COPYLOC_UNAVAILABLE_ERROR-1036]
	_ = x[COPYLOC_RESOURCE_ERROR-1037]
	_ = x[COPYLOC_EXISTS_BORROW_ERROR-1038]
	_ = x[MOVELOC_UNAVAILABLE_ERROR-1039]
	_ = x[MOVELOC_EXISTS_BORROW_ERROR-1040]
	_ = x[BORROWLOC_REFERENCE_ERROR-1041]
	_ = x[BORROWLOC_UNAVAILABLE_ERROR-1042]
	_ = x[BORROWLOC_EXISTS_BORROW_ERROR-1043]
	_ = x[CALL_TYPE_MISMATCH_ERROR-1044]
	_ = x[CALL_BORROWED_MUTABLE_REFERENCE_ERROR-1045]
	_ = x[PACK_TYPE_MISMATCH_ERROR-1046]
	_ = x[UNPACK_TYPE_MISMATCH_ERROR-1047]
	_ = x[READREF_TYPE_MISMATCH_ERROR-1048]
	_ = x[READREF_RESOURCE_ERROR-1049]
	_ = x[READREF_EXISTS_MUTABLE_BORROW_ERROR-1050]
	_ = x[WRITEREF_TYPE_MISMATCH_ERROR-1051]
	_ = x[WRITEREF_RESOURCE_ERROR-1052]
	_ = x[WRITEREF_EXISTS_BORROW_ERROR-1053]
	_ = x[WRITEREF_NO_MUTABLE_REFERENCE_ERROR-1054]
	_ = x[INTEGER_OP_TYPE_MISMATCH_ERROR-1055]
	_ = x[BOOLEAN_OP_TYPE_MISMATCH_ERROR-1056]
	_ = x[EQUALITY_OP_TYPE_MISMATCH_ERROR-1057]
	_ = x[EXISTS_RESOURCE_TYPE_MISMATCH_ERROR-1058]
	_ = x[BORROWGLOBAL_TYPE_MISMATCH_ERROR-1059]
	_ = x[BORROWGLOBAL_NO_RESOURCE_ERROR-1060]
	_ = x[MOVEFROM_TYPE_MISMATCH_ERROR-1061]
	_ = x[MOVEFROM_NO_RESOURCE_ERROR-1062]
	_ = x[MOVETOSENDER_TYPE_MISMATCH_ERROR-1063]
	_ = x[MOVETOSENDER_NO_RESOURCE_ERROR-1064]
	_ = x[CREATEACCOUNT_TYPE_MISMATCH_ERROR-1065]
	_ = x[MODULE_ADDRESS_DOES_NOT_MATCH_SENDER-1066]
	_ = x[NO_MODULE_HANDLES-1067]
	_ = x[POSITIVE_STACK_SIZE_AT_BLOCK_END-1068]
	_ = x[MISSING_ACQUIRES_RESOURCE_ANNOTATION_ERROR-1069]
	_ = x[EXTRANEOUS_ACQUIRES_RESOURCE_ANNOTATION_ERROR-1070]
	_ = x[DUPLICATE_ACQUIRES_RESOURCE_ANNOTATION_ERROR-1071]
	_ = x[INVALID_ACQUIRES_RESOURCE_ANNOTATION_ERROR-1072]
	_ = x[GLOBAL_REFERENCE_ERROR-1073]
	_ = x[CONTRAINT_KIND_MISMATCH-1074]
	_ = x[NUMBER_OF_TYPE_ACTUALS_MISMATCH-1075]
	_ = x[UNKNOWN_INVARIANT_VIOLATION_ERROR-2000]
	_ = x[OUT_OF_BOUNDS_INDEX-2001]
	_ = x[OUT_OF_BOUNDS_RANGE-2002]
	_ = x[EMPTY_VALUE_STACK-2003]
	_ = x[EMPTY_CALL_STACK-2004]
	_ = x[PC_OVERFLOW-2005]
	_ = x[LINKER_ERROR-2006]
	_ = x[LOCAL_REFERENCE_ERROR-2007]
	_ = x[STORAGE_ERROR-2008]
	_ = x[INTERNAL_TYPE_ERROR-2009]
	_ = x[EVENT_KEY_MISMATCH-2010]
	_ = x[UNKNOWN_BINARY_ERROR-3000]
	_ = x[MALFORMED-3001]
	_ = x[BAD_MAGIC-3002]
	_ = x[UNKNOWN_VERSION-3003]
	_ = x[UNKNOWN_TABLE_TYPE-3004]
	_ = x[UNKNOWN_SIGNATURE_TYPE-3005]
	_ = x[UNKNOWN_SERIALIZED_TYPE-3006]
	_ = x[UNKNOWN_OPCODE-3007]
	_ = x[BAD_HEADER_TABLE-3008]
	_ = x[UNEXPECTED_SIGNATURE_TYPE-3009]
	_ = x[DUPLICATE_TABLE-3010]
	_ = x[VERIFIER_INVARIANT_VIOLATION-3011]
	_ = x[UNKNOWN_RUNTIME_STATUS-4000]
	_ = x[EXECUTED-4001]
	_ = x[OUT_OF_GAS-4002]
	_ = x[RESOURCE_DOES_NOT_EXIST-4003]
	_ = x[RESOURCE_ALREADY_EXISTS-4004]
	_ = x[EVICTED_ACCOUNT_ACCESS-4005]
	_ = x[ACCOUNT_ADDRESS_ALREADY_EXISTS-4006]
	_ = x[TYPE_ERROR-4007]
	_ = x[MISSING_DATA-4008]
	_ = x[DATA_FORMAT_ERROR-4009]
	_ = x[INVALID_DATA-4010]
	_ = x[REMOTE_DATA_ERROR-4011]
	_ = x[CANNOT_WRITE_EXISTING_RESOURCE-4012]
	_ = x[VALUE_SERIALIZATION_ERROR-4013]
	_ = x[VALUE_DESERIALIZATION_ERROR-4014]
	_ = x[DUPLICATE_MODULE_NAME-4015]
	_ = x[ABORTED-4016]
	_ = x[ARITHMETIC_ERROR-4017]
	_ = x[DYNAMIC_REFERENCE_ERROR-4018]
	_ = x[CODE_DESERIALIZATION_ERROR-4019]
	_ = x[EXECUTION_STACK_OVERFLOW-4020]
	_ = x[CALL_STACK_OVERFLOW-4021]
	_ = x[UNKNOWN_STATUS-18446744073709551615]
}

const (
	_VMStatusCode_name_0 = "UNKNOWN_VALIDATION_STATUSINVALID_SIGNATUREINVALID_AUTH_KEYSEQUENCE_NUMBER_TOO_OLDSEQUENCE_NUMBER_TOO_NEWINSUFFICIENT_BALANCE_FOR_TRANSACTION_FEETRANSACTION_EXPIREDSENDING_ACCOUNT_DOES_NOT_EXISTREJECTED_WRITE_SETINVALID_WRITE_SETEXCEEDED_MAX_TRANSACTION_SIZEUNKNOWN_SCRIPTUNKNOWN_MODULEMAX_GAS_UNITS_EXCEEDS_MAX_GAS_UNITS_BOUNDMAX_GAS_UNITS_BELOW_MIN_TRANSACTION_GAS_UNITSGAS_UNIT_PRICE_BELOW_MIN_BOUNDGAS_UNIT_PRICE_ABOVE_MAX_BOUND"
	_VMStatusCode_name_1 = "UNKNOWN_VERIFICATION_ERRORINDEX_OUT_OF_BOUNDSRANGE_OUT_OF_BOUNDSINVALID_SIGNATURE_TOKENINVALID_FIELD_DEF_REFERENCERECURSIVE_STRUCT_DEFINITIONINVALID_RESOURCE_FIELDINVALID_FALL_THROUGHJOIN_FAILURENEGATIVE_STACK_SIZE_WITHIN_BLOCKUNBALANCED_STACKINVALID_MAIN_FUNCTION_SIGNATUREDUPLICATE_ELEMENTINVALID_MODULE_HANDLEUNIMPLEMENTED_HANDLEINCONSISTENT_FIELDSUNUSED_FIELDSLOOKUP_FAILEDVISIBILITY_MISMATCHTYPE_RESOLUTION_FAILURETYPE_MISMATCHMISSING_DEPENDENCYPOP_REFERENCE_ERRORPOP_RESOURCE_ERRORRELEASEREF_TYPE_MISMATCH_ERRORBR_TYPE_MISMATCH_ERRORABORT_TYPE_MISMATCH_ERRORSTLOC_TYPE_MISMATCH_ERRORSTLOC_UNSAFE_TO_DESTROY_ERRORRET_UNSAFE_TO_DESTROY_ERRORRET_TYPE_MISMATCH_ERRORFREEZEREF_TYPE_MISMATCH_ERRORFREEZEREF_EXISTS_MUTABLE_BORROW_ERRORBORROWFIELD_TYPE_MISMATCH_ERRORBORROWFIELD_BAD_FIELD_ERRORBORROWFIELD_EXISTS_MUTABLE_BORROW_ERRORCOPYLOC_UNAVAILABLE_ERRORCOPYLOC_RESOURCE_ERRORCOPYLOC_EXISTS_BORROW_ERRORMOVELOC_UNAVAILABLE_ERRORMOVELOC_EXISTS_BORROW_ERRORBORROWLOC_REFERENCE_ERRORBORROWLOC_UNAVAILABLE_ERRORBORROWLOC_EXISTS_BORROW_ERRORCALL_TYPE_MISMATCH_ERRORCALL_BORROWED_MUTABLE_REFERENCE_ERRORPACK_TYPE_MISMATCH_ERRORUNPACK_TYPE_MISMATCH_ERRORREADREF_TYPE_MISMATCH_ERRORREADREF_RESOURCE_ERRORREADREF_EXISTS_MUTABLE_BORROW_ERRORWRITEREF_TYPE_MISMATCH_ERRORWRITEREF_RESOURCE_ERRORWRITEREF_EXISTS_BORROW_ERRORWRITEREF_NO_MUTABLE_REFERENCE_ERRORINTEGER_OP_TYPE_MISMATCH_ERRORBOOLEAN_OP_TYPE_MISMATCH_ERROREQUALITY_OP_TYPE_MISMATCH_ERROREXISTS_RESOURCE_TYPE_MISMATCH_ERRORBORROWGLOBAL_TYPE_MISMATCH_ERRORBORROWGLOBAL_NO_RESOURCE_ERRORMOVEFROM_TYPE_MISMATCH_ERRORMOVEFROM_NO_RESOURCE_ERRORMOVETOSENDER_TYPE_MISMATCH_ERRORMOVETOSENDER_NO_RESOURCE_ERRORCREATEACCOUNT_TYPE_MISMATCH_ERRORMODULE_ADDRESS_DOES_NOT_MATCH_SENDERNO_MODULE_HANDLESPOSITIVE_STACK_SIZE_AT_BLOCK_ENDMISSING_ACQUIRES_RESOURCE_ANNOTATION_ERROREXTRANEOUS_ACQUIRES_RESOURCE_ANNOTATION_ERRORDUPLICATE_ACQUIRES_RESOURCE_ANNOTATION_ERRORINVALID_ACQUIRES_RESOURCE_ANNOTATION_ERRORGLOBAL_REFERENCE_ERRORCONTRAINT_KIND_MISMATCHNUMBER_OF_TYPE_ACTUALS_MISMATCH"
	_VMStatusCode_name_2 = "UNKNOWN_INVARIANT_VIOLATION_ERROROUT_OF_BOUNDS_INDEXOUT_OF_BOUNDS_RANGEEMPTY_VALUE_STACKEMPTY_CALL_STACKPC_OVERFLOWLINKER_ERRORLOCAL_REFERENCE_ERRORSTORAGE_ERRORINTERNAL_TYPE_ERROREVENT_KEY_MISMATCH"
	_VMStatusCode_name_3 = "UNKNOWN_BINARY_ERRORMALFORMEDBAD_MAGICUNKNOWN_VERSIONUNKNOWN_TABLE_TYPEUNKNOWN_SIGNATURE_TYPEUNKNOWN_SERIALIZED_TYPEUNKNOWN_OPCODEBAD_HEADER_TABLEUNEXPECTED_SIGNATURE_TYPEDUPLICATE_TABLEVERIFIER_INVARIANT_VIOLATION"
	_VMStatusCode_name_4 = "UNKNOWN_RUNTIME_STATUSEXECUTEDOUT_OF_GASRESOURCE_DOES_NOT_EXISTRESOURCE_ALREADY_EXISTSEVICTED_ACCOUNT_ACCESSACCOUNT_ADDRESS_ALREADY_EXISTSTYPE_ERRORMISSING_DATADATA_FORMAT_ERRORINVALID_DATAREMOTE_DATA_ERRORCANNOT_WRITE_EXISTING_RESOURCEVALUE_SERIALIZATION_ERRORVALUE_DESERIALIZATION_ERRORDUPLICATE_MODULE_NAMEABORTEDARITHMETIC_ERRORDYNAMIC_REFERENCE_ERRORCODE_DESERIALIZATION_ERROREXECUTION_STACK_OVERFLOWCALL_STACK_OVERFLOW"
	_VMStatusCode_name_5 = "UNKNOWN_STATUS"
)

var (
	_VMStatusCode_index_0 = [...]uint16{0, 25, 42, 58, 81, 104, 144, 163, 193, 211, 228, 257, 271, 285, 326, 371, 401, 431}
	_VMStatusCode_index_1 = [...]uint16{0, 26, 45, 64, 87, 114, 141, 163, 183, 195, 227, 243, 274, 291, 312, 332, 351, 364, 377, 396, 419, 432, 450, 469, 487, 517, 539, 564, 589, 618, 645, 668, 697, 734, 765, 792, 831, 856, 878, 905, 930, 957, 982, 1009, 1038, 1062, 1099, 1123, 1149, 1176, 1198, 1233, 1261, 1284, 1312, 1347, 1377, 1407, 1438, 1473, 1505, 1535, 1563, 1589, 1621, 1651, 1684, 1720, 1737, 1769, 1811, 1856, 1900, 1942, 1964, 1987, 2018}
	_VMStatusCode_index_2 = [...]uint8{0, 33, 52, 71, 88, 104, 115, 127, 148, 161, 180, 198}
	_VMStatusCode_index_3 = [...]uint8{0, 20, 29, 38, 53, 71, 93, 116, 130, 146, 171, 186, 214}
	_VMStatusCode_index_4 = [...]uint16{0, 22, 30, 40, 63, 86, 108, 138, 148, 160, 177, 189, 206, 236, 261, 288, 309, 316, 332, 355, 381, 405, 424}
)

func (i VMStatusCode) String() string {
	switch {
	case 0 <= i && i <= 16:
		return _VMStatusCode_name_0[_VMStatusCode_index_0[i]:_VMStatusCode_index_0[i+1]]
	case 1000 <= i && i <= 1075:
		i -= 1000
		return _VMStatusCode_name_1[_VMStatusCode_index_1[i]:_VMStatusCode_index_1[i+1]]
	case 2000 <= i && i <= 2010:
		i -= 2000
		return _VMStatusCode_name_2[_VMStatusCode_index_2[i]:_VMStatusCode_index_2[i+1]]
	case 3000 <= i && i <= 3011:
		i -= 3000
		return _VMStatusCode_name_3[_VMStatusCode_index_3[i]:_VMStatusCode_index_3[i+1]]
	case 4000 <= i && i <= 4021:
		i -= 4000
		return _VMStatusCode_name_4[_VMStatusCode_index_4[i]:_VMStatusCode_index_4[i+1]]
	case i == 18446744073709551615:
		return _VMStatusCode_name_5
	default:
		return "VMStatusCode(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
