// +build !js
// Code generated by protoc-gen-go. DO NOT EDIT.
// source: mempool_status.proto

package pbmpshared

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type MempoolAddTransactionStatusCode int32

const (
	// Transaction was sent to Mempool
	MempoolAddTransactionStatusCode_Valid MempoolAddTransactionStatusCode = 0
	// The sender does not have enough balance for the transaction.
	MempoolAddTransactionStatusCode_InsufficientBalance MempoolAddTransactionStatusCode = 1
	// Sequence number is old, etc.
	MempoolAddTransactionStatusCode_InvalidSeqNumber MempoolAddTransactionStatusCode = 2
	// Mempool is full (reached max global capacity)
	MempoolAddTransactionStatusCode_MempoolIsFull MempoolAddTransactionStatusCode = 3
	// Account reached max capacity per account
	MempoolAddTransactionStatusCode_TooManyTransactions MempoolAddTransactionStatusCode = 4
	// Invalid update. Only gas price increase is allowed
	MempoolAddTransactionStatusCode_InvalidUpdate MempoolAddTransactionStatusCode = 5
)

var MempoolAddTransactionStatusCode_name = map[int32]string{
	0: "Valid",
	1: "InsufficientBalance",
	2: "InvalidSeqNumber",
	3: "MempoolIsFull",
	4: "TooManyTransactions",
	5: "InvalidUpdate",
}

var MempoolAddTransactionStatusCode_value = map[string]int32{
	"Valid":               0,
	"InsufficientBalance": 1,
	"InvalidSeqNumber":    2,
	"MempoolIsFull":       3,
	"TooManyTransactions": 4,
	"InvalidUpdate":       5,
}

func (x MempoolAddTransactionStatusCode) String() string {
	return proto.EnumName(MempoolAddTransactionStatusCode_name, int32(x))
}

func (MempoolAddTransactionStatusCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_cad4a86f8a5465be, []int{0}
}

type MempoolAddTransactionStatus struct {
	Code                 MempoolAddTransactionStatusCode `protobuf:"varint,1,opt,name=code,proto3,enum=mempool_status.MempoolAddTransactionStatusCode" json:"code,omitempty"`
	Message              string                          `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *MempoolAddTransactionStatus) Reset()         { *m = MempoolAddTransactionStatus{} }
func (m *MempoolAddTransactionStatus) String() string { return proto.CompactTextString(m) }
func (*MempoolAddTransactionStatus) ProtoMessage()    {}
func (*MempoolAddTransactionStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_cad4a86f8a5465be, []int{0}
}

func (m *MempoolAddTransactionStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MempoolAddTransactionStatus.Unmarshal(m, b)
}
func (m *MempoolAddTransactionStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MempoolAddTransactionStatus.Marshal(b, m, deterministic)
}
func (m *MempoolAddTransactionStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MempoolAddTransactionStatus.Merge(m, src)
}
func (m *MempoolAddTransactionStatus) XXX_Size() int {
	return xxx_messageInfo_MempoolAddTransactionStatus.Size(m)
}
func (m *MempoolAddTransactionStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_MempoolAddTransactionStatus.DiscardUnknown(m)
}

var xxx_messageInfo_MempoolAddTransactionStatus proto.InternalMessageInfo

func (m *MempoolAddTransactionStatus) GetCode() MempoolAddTransactionStatusCode {
	if m != nil {
		return m.Code
	}
	return MempoolAddTransactionStatusCode_Valid
}

func (m *MempoolAddTransactionStatus) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterEnum("mempool_status.MempoolAddTransactionStatusCode", MempoolAddTransactionStatusCode_name, MempoolAddTransactionStatusCode_value)
	proto.RegisterType((*MempoolAddTransactionStatus)(nil), "mempool_status.MempoolAddTransactionStatus")
}

func init() { proto.RegisterFile("mempool_status.proto", fileDescriptor_cad4a86f8a5465be) }

var fileDescriptor_cad4a86f8a5465be = []byte{
	// 273 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x90, 0x4d, 0x4b, 0xc3, 0x40,
	0x10, 0x86, 0x4d, 0x6d, 0x95, 0x2e, 0x58, 0xd6, 0xb5, 0x60, 0xc0, 0x83, 0xc5, 0x53, 0x11, 0xcc,
	0x62, 0x3d, 0x88, 0x47, 0x5b, 0x10, 0x72, 0xa8, 0x87, 0xb6, 0x7a, 0xf0, 0x22, 0x93, 0xec, 0x34,
	0x59, 0xd8, 0x8f, 0xb8, 0xbb, 0x11, 0x04, 0x7f, 0x89, 0xbf, 0x56, 0x12, 0x2b, 0xa8, 0x07, 0x7b,
	0x9c, 0x77, 0xde, 0xe7, 0x19, 0x18, 0x32, 0xd4, 0xa8, 0x2b, 0x6b, 0xd5, 0xb3, 0x0f, 0x10, 0x6a,
	0x9f, 0x54, 0xce, 0x06, 0xcb, 0x06, 0xbf, 0xd3, 0xb3, 0x77, 0x72, 0x32, 0xff, 0x4a, 0x6e, 0x85,
	0x58, 0x39, 0x30, 0x1e, 0xf2, 0x20, 0xad, 0x59, 0xb6, 0x6b, 0x36, 0x23, 0xdd, 0xdc, 0x0a, 0x8c,
	0xa3, 0x51, 0x34, 0x1e, 0x4c, 0x78, 0xf2, 0xc7, 0xf9, 0x0f, 0x3a, 0xb3, 0x02, 0x17, 0x2d, 0xcc,
	0x62, 0xb2, 0xaf, 0xd1, 0x7b, 0x28, 0x30, 0xee, 0x8c, 0xa2, 0x71, 0x7f, 0xf1, 0x3d, 0x9e, 0x7f,
	0x44, 0xe4, 0x74, 0x8b, 0x83, 0xf5, 0x49, 0xef, 0x11, 0x94, 0x14, 0x74, 0x87, 0x1d, 0x93, 0xa3,
	0xd4, 0xf8, 0x7a, 0xbd, 0x96, 0xb9, 0x44, 0x13, 0xa6, 0xa0, 0xc0, 0xe4, 0x48, 0x23, 0x36, 0x24,
	0x34, 0x35, 0xaf, 0x4d, 0x6b, 0x89, 0x2f, 0xf7, 0xb5, 0xce, 0xd0, 0xd1, 0x0e, 0x3b, 0x24, 0x07,
	0x1b, 0x79, 0xea, 0xef, 0x6a, 0xa5, 0xe8, 0x6e, 0x63, 0x58, 0x59, 0x3b, 0x07, 0xf3, 0xf6, 0xe3,
	0x98, 0xa7, 0xdd, 0xa6, 0xbb, 0x31, 0x3c, 0x54, 0x02, 0x02, 0xd2, 0xde, 0xf4, 0xf2, 0x89, 0x17,
	0x32, 0x94, 0x75, 0x96, 0xe4, 0x56, 0xf3, 0x50, 0xe2, 0xf5, 0xe4, 0x86, 0x17, 0xf6, 0x42, 0xc9,
	0xcc, 0x01, 0x2f, 0xd0, 0xa0, 0x83, 0x80, 0x82, 0x57, 0x99, 0xae, 0x7c, 0x09, 0x0e, 0x45, 0xb6,
	0xd7, 0x3e, 0xf9, 0xea, 0x33, 0x00, 0x00, 0xff, 0xff, 0xa4, 0xa7, 0xfb, 0xcc, 0x7c, 0x01, 0x00,
	0x00,
}
